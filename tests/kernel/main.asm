    ORG 0x30000
    MOV64 SP, STK_TOP
    JMP MAIN

MAIN:
    CALL IVT_INIT
    CALL NEWLINE
    CALL NEWLINE
    MOV64 G0, KMSG
    MOV8 G1, 0x0F
    CALL PRINT_COLOR
    CALL NEWLINE
    CALL PRINT_SHELL_INPUT
    CALL KB_INIT
EXIT:
    JMP EXIT

PRINT_SHELL_INPUT:
    MOV64 G0, SHELL_INPUT
    MOV8 G1, 0x07 ; YELLOW
    CALL PRINT_COLOR
    RET

DSKINFO:
    MOV64 G0, KB_BUFFER
    ADD64 G0, 1
    CALL ATOI
    CMP32 G1, [0x20020]; DSKCNT
    JGE DSKINFO_EXIT
    MOV32 G10, G1

    MOV64 G0, DSKNUM_PROMPT
    CALL PRINT
    MOV64 G0, KB_BUFFER
    ADD64 G0, 1
    MOV8 G1, 0x05
    CALL PRINT_COLOR
    CALL NEWLINE

    MOV32 [0x20000], G10
    MOV64 [0x20018], DSKBUF
    MOV8 [0x20005], 3 ; INFO
DSKINFO_LOOP:
    CMP8 [0x20004], 8 ; DONE
    JE DSKINFO_DONE
    JMP DSKINFO_LOOP
DSKINFO_DONE:
    MOV8 [0x20004], 1 ; RESET STATUS

    MOV64 G0, DSKINFO_NAME
    CALL PRINT
    MOV64 G0, DSKBUF
    MOV8 G1, 0x05
    CALL PRINT_COLOR
    CALL NEWLINE

    MOV64 G0, DSKINFO_SECT
    CALL PRINT

    MOV64 G0, [DSKBUF+32]
    MOV64 G1, DSKINFO_SECT_BUF
    CALL ITOA

    MOV64 G0, DSKINFO_SECT_BUF
    MOV8 G1, 0x05
    CALL PRINT_COLOR

    MOV64 G0, DSKINFO_BYTES1
    CALL PRINT

    MOV64 G0, [DSKBUF+32]
    MUL64 G0, 1024
    MOV64 G1, DSKINFO_BYTES_BUF
    CALL ITOA

    MOV64 G0, DSKINFO_BYTES_BUF
    MOV8 G1, 0x05
    CALL PRINT_COLOR

    MOV64 G0, DSKINFO_BYTES2
    CALL PRINT

    CALL NEWLINE

DSKINFO_EXIT:
    RET

LSDSK:
    MOV32 G3, [0x20020] ; DSKCNT
    MOV32 G4, 0
LSDSK_LOOP:
    CMP32 G4, G3
    JE LSDSK_EXIT
    MOV64 G0, G4
    MOV64 G1, DSKNUM_BUF
    CALL ITOA
    MOV64 G0, DSKNUM_PROMPT
    CALL PRINT
    MOV64 G0, DSKNUM_BUF
    MOV8 G1, 0x05
    CALL PRINT_COLOR
    CALL NEWLINE
    ADD32 G4, 1
    JMP LSDSK_LOOP
LSDSK_EXIT:
    RET

KB_ENTER:
    MOV64 G0, LSDSK_CMD
    MOV64 G1, KB_BUFFER
    CALL STRCMP
    CMP8 G2, 0
    JE SHELL_LSDSK
    CMP8 [KB_BUFFER], 35 ; #
    JE SHELL_DSKINFO
    JMP KB_ENTER_EXIT
SHELL_LSDSK:
    CALL LSDSK
    JMP KB_ENTER_EXIT
SHELL_DSKINFO:
    CALL DSKINFO
KB_ENTER_EXIT:
    CALL PRINT_SHELL_INPUT
    RET

KMSG: D8 "Hello world from Kernel loaded from Disk!" D8 0
SHELL_INPUT: D8 "SHELL> " D8 0

LSDSK_CMD: D8 "lsdsk" D8 0
DSKNUM_BUF: RES8 32
DSKNUM_PROMPT: D8 "DISK #" D8 0

DSKINFO_NUM_BUF: RES8 32
DSKINFO_NAME: D8 "DISK NAME: " D8 0
DSKINFO_SECT: D8 "DISK SECTOR COUNT: " D8 0
DSKINFO_SECT_BUF: RES8 32
DSKINFO_BYTES1: D8 " (" D8 0
DSKINFO_BYTES_BUF: RES8 32
DSKINFO_BYTES2: D8 " BYTES)" D8 0

DSKBUF: RES8 1024

STK_BOTTOM: RES8 4096
STK_TOP: D8 0

%INCLUDE "header.asm"
%INCLUDE "disk.asm"